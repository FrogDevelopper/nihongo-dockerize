version: "3.7"

services:

#  authentication-service:
#    image: frognihongo/authentication-service:feature-micronaut_migration
#    deploy:
#        mode: replicated
#        replicas: 1
#        placement:
#          constraints:
#            - node.labels.size == large
#    healthcheck:
#      test: "curl --fail --silent localhost:8085/health | grep UP || exit 1"
#      interval: 20s
#      timeout: 5s
#      retries: 5
#      start_period: 40s
#    networks:
#      - nihongo
#    secrets:
#      - frog_admin_user
#      - frog_admin_password
#    environment:
#      TZ: Europe/Paris
#      MICRONAUT_ENVIRONMENTS: docker

  nihongo-dico-entries-service:
    image: frognihongo/nihongo-dico-entries-service:feature-micronaut_migration
    deploy:
        mode: replicated
        replicas: 0
        placement:
          constraints:
            - node.labels.size == large
    healthcheck:
      test: "curl --fail --silent localhost:8085/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - nihongo
    secrets:
      - frog_admin_user
      - frog_admin_password
    environment:
      TZ: Europe/Paris
      MICRONAUT_ENVIRONMENTS: docker

  nihongo-dico-sentences-service:
    image: frognihongo/nihongo-dico-sentences-service:feature-micronaut_migration
    deploy:
        mode: replicated
        replicas: 0
        placement:
          constraints:
            - node.labels.size == large
    healthcheck:
      test: "curl --fail --silent localhost:8085/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - nihongo
    secrets:
      - frog_admin_user
      - frog_admin_password
    environment:
      TZ: Europe/Paris
      MICRONAUT_ENVIRONMENTS: docker

#  nihongo-lessons-service:
#    image: frognihongo/nihongo-lessons-service:feature-micronaut_migration
#    deploy:
#        mode: replicated
#        replicas: 0
#        placement:
#          constraints:
#            - node.labels.size == large
#    healthcheck:
#      test: "curl --fail --silent localhost:8085/health | grep UP || exit 1"
#      interval: 20s
#      timeout: 5s
#      retries: 5
#      start_period: 40s
#    depends_on:
#      - authentication-service
#    networks:
#      - nihongo
#    secrets:
#      - frog_admin_user
#      - frog_admin_password
#    environment:
#      TZ: Europe/Paris
#      MICRONAUT_ENVIRONMENTS: docker

secrets:
  frog_admin_user:
    external: true
  frog_admin_password:
    external: true

networks:
  nihongo:
    external: true
    name: nihongo
